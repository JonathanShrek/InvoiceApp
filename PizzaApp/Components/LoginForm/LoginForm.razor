@*@inject HttpClient Http*@
@inject AuthenticationStateProvider AuthStateProvider
@inject ILocalStorageService LocalStorage

@namespace PizzaApp.Components

<MudGrid>
    @if (IsLoading)
    {
        <MudItem xs="12" Class="pa-10 d-flex align-self-center justify-center">
            <MudProgressCircular Color="Color.Success" Indeterminate="true" />
        </MudItem>
    }
    else
    {
        <MudItem xs="12">
            <EditForm Model="user" OnSubmit="HandleLogin">
                <label for="username">Name</label>
                <InputText id="username" @bind-Value="user.Username" />
                <label for="password">Password</label>
                <InputText id="password" @bind-Value="user.Password" typeof="password" />
                <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="my-3 flex-md-grow-0 flex-grow-1">
                    <MudText>Login</MudText>
                </MudButton>
            </EditForm>
        </MudItem>

@*        <MudItem xs="12">
            <EditForm OnValidSubmit="Login" Model="Model">
                <DataAnnotationsValidator />

                <MudGrid>
                    <MudItem xs="12" Class="d-flex align-self-center justify-md-start justify-center">
                        <h1>Login</h1>
                    </MudItem>
                </MudGrid>

                <MudGrid>
                    <MudItem xs="12">
                        <MudTextField Label="Email" @bind-Value="Model.Email" For="@(() => Model.Email)" InputMode="InputMode.email" InputType="InputType.Email" />
                    </MudItem>
                </MudGrid>

                <MudGrid>
                    <MudItem xs="12">
                        <MudTextField @bind-Value="Model.Password"
                            For="@(() => Model.Password)"
                            Label="Password"
                            Variant="Variant.Text"
                            InputType="@PasswordInput"
                            Adornment="Adornment.End"
                            AdornmentIcon="@PasswordInputIcon"
                            OnAdornmentClick="TogglePasswordVisibility"
                            AdornmentAriaLabel="Show Password" />
                    </MudItem>
                </MudGrid>

                <MudGrid>
                    <MudItem xs="12" Class="d-flex justify-md-end justify-center">
                        <MudButton Disabled="@BtnLogin" ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="my-3 flex-md-grow-0 flex-grow-1">
                            @if (BtnLogin)
                            {
                                <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true" />
                                <MudText Class="ms-2">Processing</MudText>
                            }
                            else
                            {
                                <MudText>Login</MudText>
                            }
                        </MudButton>
                    </MudItem>
                </MudGrid>
            </EditForm>
        </MudItem>
*@    }
</MudGrid>

@code {
    UserLoginDto user = new UserLoginDto();

    async Task HandleLogin()
    {
        //var result = await _httpclient.PostAsJsonAsync("api/auth", user);
        //var token = await result.Content.ReadAsStringAsync();
        //Console.WriteLine(token);
        //await LocalStorage.SetItemAsync("token", token);
        //await AuthStateProvider.GetAuthenticationStateAsync();
    }
}